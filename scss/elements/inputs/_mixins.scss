@mixin pe-placeholder {
  &::-webkit-input-placeholder { @content }
  &::-moz-placeholder { @content }
  &:-moz-placeholder { @content }
  &:-ms-input-placeholder { @content }
}

@mixin textInput() {
  %pe-textInput {
    padding   : $textInput-padding;
    font-size : $textInput-value-font-size;
    color     : $textInput-value-color;
    width     : $textInput-width;
    border    : $textInput-border-reset;

    @include pe-placeholder {
      font-size : $textInput-placeholder-font-size;
      color      : $textInput-placeholder-color;
    }

    &:focus {
      outline: none;
    }

  }

  input:focus+.pe-input_underline {
    transform: scale(1);
  }

  .pe-input_underline {
    background-color: $textInput-focus-border-bottom-color;
    display: block;
    height: 4px;
    -webkit-transform: scale(0, 1);
    transform: scale(0, 1);
    -webkit-transition: $textInput-animation;
    transition: $textInput-animation;
    width: 100%;
  }


  .pe-textInput {
    @extend %pe-textInput;
    border-bottom       : $textInput-border-bottom;
    border-bottom-style : $textInput-border-bottom-style;
    border-bottom-color : $textInput-border-bottom-color;
  }
};




@mixin textInputError() {
  input:focus+.pe-inputError_underline {
    transform: scale(1);
  }

  .pe-inputError_underline {
    background-color: $textInput-error-border-bottom-color;
    display: block;
    height: 4px;
    -webkit-transform: scale(0, 1);
    transform: scale(0, 1);
    -webkit-transition: $textInput-animation;
    transition: $textInput-animation;
    width: 100%;
  }

  .pe-textInput--input_error {
    @extend %pe-textInput;
    border-bottom       : $textInput-error-border-bottom;
    border-bottom-style : $textInput-error-border-bottom-style;
    border-bottom-color : $textInput-error-border-bottom-color;
  }

  .pe-input-wrapper{
    min-height : 52px;
  }

};



@mixin textInputLabel() {
  .pe-textLabelInput__label {
    font-size : $textInput-label-font-size;
    color     : $textInput-label-color;
  }
};



@mixin textInputLabelError() {
  .pe-textLabelInput__label--label_error {
    color     : $textInput-error-focus-label-color;
    font-size : $textInput-error-focus-label-font-size;
  }
};



@mixin textInputReadOnly() {
  .pe-textInput--input_readonly {
    @extend %pe-textInput;
    border-bottom : $textInput-readonly-border;
    color         : $textInput-readonly-text-color;
    font-size     : $textInput-readonly-text-font-size;
  }
};


@mixin textInputDisabled() {
  .pe-textInput:disabled {
    color               : $textInput-disable-text-color;
    background-color    : $textInput-disable-background-color;
    border-bottom       : $textInput-disable-border-bottom;
    border-bottom-style : $textInput-disable-border-bottom-style;
    border-bottom-color : $textInput-disable-border-bottom-color;
  }
};


@mixin textInputLabelDisabled() {
  .pe-textLabelInput__label--label-disabled {
    color     : $textInput-disable-text-color;
    font-size : $textInput-disable-text-font-size;
  }
};


@mixin clearIEPasswordIcon() {
  //for IE password Input Icon...
  ::-ms-reveal {
      display: none;
  };
};

@mixin checkbox() {

  input[type="checkbox"]{
    display : none;
  }


  .checkbox {
  	width: 18px;
  	position: relative;
  }


  .checkbox label {
  	cursor: pointer;
  	position: absolute;
  	width: 16px;
  	height: 16px;
  	top: 0;
    left: 0;
  	background: transparent;
  	border:1px solid #ddd;
  }

  .checkbox label:after {
  	opacity: 1;
  	content: '';
  	position: absolute;
  	width: 9px;
  	height: 5px;
  	background: transparent;
  	top: 3px;
  	left: 2px;
  	border: 3px solid #333;
  	border-top: none;
  	border-right: none;
  	transform: rotate(-60deg);
  }


  .checkbox label::after {
  	opacity: 0;
  }

  /**
   * Create the checkbox state for the tick
   */
  .checkbox input[type=checkbox]:checked + label:after {
  	opacity: 1;
  }

  .pe-checkbox__label {
    margin-left: 30px;
  };



};
