//Grid Mixins

@mixin generate-container($pe-container-max-width, $pe-responsive-breakpoints) {
  .pe-container {
    position      : relative;
    max-width     : $pe-container-max-width;
    margin-right  : auto;
    margin-left   : auto;
    min-height    : 1px;
    @include clearfix();

    @each $breakpoint in map-keys($pe-responsive-breakpoints) {

      //Get container margin by breakpoint
      $breakpoint-value : pe-responsive-get-breakpoint-value($breakpoint, min);
      $margin           : map-get($pe-container-margin, $breakpoint);

      //Construct media query
      @media(min-width:#{$breakpoint-value} ){
        padding-right : ($margin / 2);
        padding-left  : ($margin / 2);
      };
    };
  };
};


@mixin generate-columns($pe-responsive-breakpoints){
  $breakpoint-list:();

  @each $breakpoint in map-keys($pe-container-margin) {

    $current-gutter  : map-get($pe-gutter-widths, $breakpoint);

    //Construct media query
    $current-breakpoint-value-get : pe-responsive-get-breakpoint-value($breakpoint, min);

    @if $current-breakpoint-value-get <= $pe-container-max-width {
       $current-breakpoint-value-get : $current-breakpoint-value-get
    } @else{
       $current-breakpoint-value-get : $pe-container-max-width
      }

    @media(min-width: $current-breakpoint-value-get){

      //Construct Row
      .pe-row {
        margin-right : $current-gutter / -2;
        margin-left  : $current-gutter / -2;
        @include clearfix();

        @for $i from 1 through $pe-columns {

          $breakpoint-list : append($breakpoint-list, unquote(".col-#{$breakpoint}-#{$i}"), comma);
          $column-width    : percentage($i / $pe-columns);

          //Construct column
          .pe-col-#{$breakpoint}-#{$i} {
            padding-right : $current-gutter / 2;
            padding-left  : $current-gutter / 2;
            width         : $column-width;
            float         : left;
          };
        };
      };
    };
  };

  #{$breakpoint-list} {
    position   : relative;
    min-height : 1px;
  };
};


@mixin clearfix() {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}
